#include "bits/stdc++.h"
using namespace std;

class node
{
public:
    int data;
    node *left;
    node *right;
    node(int x)
    {
        data = x;
        left = NULL;
        right = NULL;
    }
};

vector<vector<int>> allinOne(node *root)
{
    if(root == NULL){
        return {{}};
    }
    vector<vector<int>> ans;
    stack<pair<node*, int>> st;
    st.push({root, 1});
    vector<int> pre, in, post;
    while(!st.empty()){
        node *n = st.top().first;
        int num = st.top().second;
        st.pop();
        if(num == 1){ //preorder
            pre.push_back(n->data);
            st.push({n,num+1});
            if(n->left != NULL){
                st.push({n->left,1});
            }
        }
        else if(num == 2){
            in.push_back(n->data);
            st.push({n,num+1});
            if(n->right != NULL){
                st.push({n->right,1});
            }
        }
        else{
            post.push_back(n->data);
        }
    }
    ans.push_back(pre);
    ans.push_back(in);
    ans.push_back(post);
    return ans;
};

int main()
{
    node *root = new node(1);
    root->left = new node(2);
    root->right = new node(5);
    root->left->left = new node(3);
    root->left->right = new node(4);
    root->right->left = new node(6);
    root->right->right = new node(7);

    vector<vector<int>> ans = allinOne(root);

    for (int i{0}; i < ans.size(); i++)
    {
        for (int j{0}; j < ans[i].size(); j++)
        {
            cout << ans[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}