/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        if(root==NULL){
            return {};
        }
        vector<int>inorder;
        TreeNode *cur = root;
        while(cur!=NULL){
            if(cur->left==NULL){
                inorder.push_back(cur->val);
                cur=cur->right;
            }
            else{
                //go to the left most
                TreeNode *temp = cur->left;
                while(temp->right!=NULL && temp->right!=cur){
                    temp = temp->right;
                }
                if(temp->right==cur){ //thread already created, so i have already traversed left
                    inorder.push_back(cur->val);
                    temp->right=NULL;
                    cur=cur->right;
                }
                else{
                    temp->right = cur;
                    cur = cur->left;
                }
            }
        }
        return inorder;
    }
};