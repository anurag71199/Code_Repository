class Solution {
public:
    int longestPalindromeSubseq(string s) {
        //use the longest cmmon subsequence logic in the given
        //string and its reverse

        string rev = s;
        reverse(rev.begin(),rev.end());
        vector<vector<int>>dp(s.size()+1,vector<int>(rev.size()+1,0));
        for(int i=1;i<=s.size();i++){
            for(int j=1;j<=rev.size();j++){
                if(s[i-1] == rev[j-1]){
                    dp[i][j] = 1 + dp[i-1][j-1];
                }
                else{
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[s.size()][rev.size()];
    }
};
