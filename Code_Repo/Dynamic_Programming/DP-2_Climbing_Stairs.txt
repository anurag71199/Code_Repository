class Solution {
public:
    int memoize(int i,int n, vector<int>&dp){
        if(i==n)
            return 1;
        if(i>n)
            return 0;
        if(dp[i] != -1)
            return dp[i];
        return dp[i] = memoize(i+1,n,dp) + memoize(i+2,n,dp);
    }

    int tabular(int n){
        if(n<2)
            return n;
        vector<int>dp(n+1,-1);
        dp[1] = 1;
        dp[2] = 2;
        for(int i=3;i<=n;i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }

    int so(int n){
        if(n<2)
            return n;
        int a = 1;
        int b = 2;
        int c;
        for(int i=3;i<=n;i++){
            c = a + b;
            a = b;
            b = c;
        }
        return c;
    }

    int climbStairs(int n) {
        vector<int>dp(n+1,-1);
        // return memoize(0,n,dp);
        // return tabular(n);
        return so(n);
    }
};
