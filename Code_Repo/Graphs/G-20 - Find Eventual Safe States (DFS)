bool dfs(vector<int> adj[], vector<int>&visited, vector<int>&path, vector<int>&check, int node){
        visited[node] = 1;
        path[node] = 1;
        for(auto i : adj[node]){
            if(visited[i] == 0){
                if(dfs(adj,visited,path,check,i) == true){
                    check[node] = 0;
                    return true;
                }
            }
            else if (path[i] == 1){
                check[node] = 0;
                return true;
            }
        }
        check[node] = 1;
        path[node] = 0;
        return false;
    }
    vector<int> eventualSafeNodes(int V, vector<int> adj[]) {
        // code here
        vector<int>visited(V,0);
        vector<int>check(V,0);
        vector<int>path(V,0);
        vector<int>ans;
        for(int i=0;i<V;i++){
            if(visited[i] == 0){
                dfs(adj,visited,path,check,i);
            }
        }
        for(int i=0;i<V;i++){
            if(check[i]==1){
                ans.push_back(i);
            }
        }
        return ans;
    }
