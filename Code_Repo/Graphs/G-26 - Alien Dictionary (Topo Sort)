string findOrder(string dict[], int N, int K) {
        vector<int>adj[K];
        for(int i=0;i<N-1;i++){
            string s1 = dict[i];
            string s2 = dict[i+1];
            int x=0;
            while(x < min(s1.size(),s2.size())){
                if(s1[x] != s2[x]){
                    //s1 to s2 edge
                    adj[s1[x]-'a'].push_back(s2[x]-'a');
                    break;
                }
                x++;
            }
        }
        vector<int>indegree(K,0);
        for(int i=0; i<K; i++){
            for(int x : adj[i]){
                indegree[x]++;
            }
        }
        queue<int>q;
        for(int i = 0;i<K;i++){
            if(indegree[i] == 0){
                q.push(i);
            }
        }
        string ans = "";
        while(!q.empty()){
            int node = q.front();
            q.pop();
            ans += (char)('a'+node);
            for(auto i : adj[node]){
                indegree[i]--;
                if(indegree[i] == 0){
                    q.push(i);
                }
            }
        }
        return ans;
    }
