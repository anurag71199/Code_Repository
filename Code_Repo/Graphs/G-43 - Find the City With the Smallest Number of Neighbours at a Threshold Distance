int findCity(int n, int m, vector<vector<int>>& edges,int distanceThreshold) {
        vector<vector<int>>mat(n,vector<int>(n,1e8));
        //make cost matrix
        for(int i=0;i<m;i++){
            int u = edges[i][0];
            int v = edges[i][1];
            int wt = edges[i][2];
            mat[u][v] = wt;
            mat[v][u] = wt;
        } 
        for(int i=0;i<n;i++){
            mat[i][i] = 0;
        }
        //run floyd warshall
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(mat[i][k] == 1e8 || mat[k][j] == 1e8 || i==j || i==k || j==k){
                        continue;
                    }
                    mat[i][j] = min(mat[i][j],mat[i][k]+mat[k][j]);
                }
            }
        }
        //check for min cities
        int city = 0;
        int maxnum = n;
        int count=0;
        for(int i=0;i<n;i++){
            count=0;
            for(int j=0;j<n;j++){
                if(mat[i][j]<=distanceThreshold){
                    count++;
                }
            }
            if(count<=maxnum){
                maxnum=count;
                city=i;
            }
        }
        return city;
    }
