void bfs(vector<int>adjlist[],int node,vector<int>&visited){
        queue<int>q;
        q.push(node);
        while(!q.empty()){
            int n = q.front();
            q.pop();
            visited[n] = 1;
            for(auto i : adjlist[n]){
                if(visited[i] == 0){
                    q.push(i);
                }
            }
        }
    }
    int numProvinces(vector<vector<int>> adj, int V) {
        // code here
        vector<int>adjlist[V];
        for(int i=0;i<adj.size();i++){
            for(int j=0;j<adj[0].size();j++){
                if(adj[i][j]==1 && i!=j){
                    adjlist[i].push_back(j);
                    adjlist[j].push_back(i);
                }
            }
        }
        vector<int>visited(V+1,0);
        int count = 0;
        for(int i=0;i<V;i++){
            if(visited[i] == 0){
                count++;
                bfs(adjlist,i,visited);
            }
        }
        return count;
        
    }
