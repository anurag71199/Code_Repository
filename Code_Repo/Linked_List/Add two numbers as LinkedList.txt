/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* res = new ListNode();
        ListNode* reshead = res;
        int carry = 0;
        while(l1!=NULL && l2!=NULL){
            int val = l1->val + l2->val + carry;
            if(val>=10){
                carry = val/10;
                val %= 10;
            }
            else{
                carry = 0;
            }
            ListNode* node = new ListNode(val);
            res->next = node;
            res = node;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1 != NULL){
            int val = l1->val + carry;
            if(val>=10){
                carry = val/10;
                val %= 10;
            }
            else{
                carry = 0;
            }
            ListNode* node = new ListNode(val);
            res->next = node;
            res = node;
            l1 = l1->next;
        }
        while(l2!=NULL){
            int val = l2->val + carry;
            if(val>=10){
                carry = val/10;
                val %= 10;
            }
            else{
                carry = 0;
            }
            ListNode* node = new ListNode(val);
            res->next = node;
            res = node;
            l2 = l2->next;
        }
        if(carry != 0){
            ListNode* node = new ListNode(carry);
            res->next = node;
        }
        return reshead->next;
    }
};