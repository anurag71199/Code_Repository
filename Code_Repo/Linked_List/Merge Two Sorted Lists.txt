/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL){
            return list2;
        }
        if(list2 == NULL){
            return list1;
        }
        ListNode* l1 = list1->val<=list2->val?list1:list2;
        ListNode* l2 = list1->val>list2->val?list1:list2;
        ListNode* prev = NULL;
        ListNode* newhead = l1;
        while(l1!=NULL && l2!=NULL){
            if(l1->val <= l2->val){
                prev = l1;
                l1 = l1->next;
            }
            else{
                prev->next = l2;
                ListNode* temp = l1;
                l1 = l2;
                l2 = temp;
            }
        }
        prev->next = l2;
        return newhead;
    }
};