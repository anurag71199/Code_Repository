/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL || head->next == NULL){
            return head;
        }
        //find the length of the list
        ListNode *last = head;
        ListNode *first = head;
        int len = 1;
        while(last->next != NULL){
            len++;
            last = last->next;
        }
        if(k%len == 0){
            return head;
        }
        last->next = head;
        k = k%len;
        int jump = len-k;
        for(int i=1;i<jump;i++){
            first = first->next;
        }
        head = first->next;
        first->next = NULL;
        return head;
    }
};